apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdk rootProject.ext.compileSdkVersion
//    buildToolsVersion rootProject.ext.buildToolsVersion
    namespace rootProject.ext.sampleArchivesBaseName

    defaultConfig {
        applicationId rootProject.ext.sampleArchivesBaseName
        minSdk 24
        targetSdk rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "0.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget =17 }
//    dexOptions {
//        preDexLibraries = false
//    }
}

//repositories {
//    maven { url rootProject.ext.mavenUrl }
//}



dependencies {
    //compile fileTree(dir: '../org.eclipse.paho.android/service/libs', excludes: ["org.eclipse.paho.client.mqttv3-${rootProject.ext.clientVersion}.jar"], include: '')
    implementation 'androidx.appcompat:appcompat:1.7.0'
    //ompile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:${rootProject.ext.clientVersion}"
    implementation (project(':org.eclipse.paho.android.service')){
        //exclude module: "org.eclipse.paho.client.mqttv3"
        transitive=true
    }
}

//task publishAPK(type: Copy) {
//    from file("${project.buildDir}/outputs/apk/" + rootProject.ext.sampleArchivesBaseName + "-debug.apk");
//    into '/shared/technology/paho/Android/' + rootProject.ext.sampleVersion + '/debug/';
//}


//configurations.compile.exclude module: 'org.eclipse.paho.client.mqttv3'
//task debug << {
//    configurations.compile.each { println it}
//}
